name: Deployment Setup Steps Monitor

on:
  issues:
    types: [closed]
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  check-setup-steps:
    if: github.event.pull_request.merged == true || github.event_name == 'issues'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Find and process setup steps
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            async function processIssue(issueNumber) {
              try {
                const { data: issue } = await github.rest.issues.get({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber
                });

                const { data: comments } = await github.rest.issues.listComments({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber
                });

                // Check issue body and comments for "Step setup"
                const setupSteps = [];
                if (issue.body && issue.body.includes('Step setup')) {
                  setupSteps.push(issue.body);
                }

                comments.forEach(comment => {
                  if (comment.body && comment.body.includes('Step setup')) {
                    setupSteps.push(comment.body);
                  }
                });

                if (setupSteps.length > 0) {
                  const eventType = context.eventName === 'issues' ? 'issue closure' : 'merge to main';
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issueNumber,
                    body: `ðŸ”” **Setup Steps Required - ${eventType}**

                    This issue contains setup steps that need attention during ${eventType}.
                    
                    Please review the setup instructions in the comments above and ensure all necessary steps are completed.
                    
                    Event details:
                    - Type: ${eventType}
                    - Branch: main
                    - Triggered by: ${context.actor}`
                  });
                }
              } catch (error) {
                console.log(`Error processing issue ${issueNumber}: ${error.message}`);
              }
            }

            try {
              if (context.eventName === 'issues') {
                // Process the closed issue
                await processIssue(context.payload.issue.number);
              } else if (context.eventName === 'pull_request' && context.payload.pull_request.merged) {
                // For merged PRs, check the PR body for linked issues
                const prBody = context.payload.pull_request.body || '';
                const issueRefs = prBody.match(/#(\d+)/g) || [];
                const issueNumbers = new Set();

                issueRefs.forEach(ref => {
                  const num = parseInt(ref.substring(1));
                  if (!isNaN(num)) issueNumbers.add(num);
                });

                // Process each linked issue
                for (const issueNumber of issueNumbers) {
                  await processIssue(issueNumber);
                }
              }
            } catch (error) {
              console.log(`Workflow error: ${error.message}`);
            } 